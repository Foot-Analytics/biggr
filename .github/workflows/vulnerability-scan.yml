name: Vulnerability Scanning

on:
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  # Allow manual triggering
  workflow_dispatch:
  # Also run on package updates
  push:
    paths:
      - 'DESCRIPTION'

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
      
      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          install.packages("oysteR")
        shell: Rscript {0}
      
      - name: Install package
        run: |
          remotes::install_local(".", dependencies = TRUE)
        shell: Rscript {0}
      
      - name: Run vulnerability scan
        run: |
          # Create a temporary file for the vulnerability report
          report_file <- tempfile(fileext = ".csv")
          
          # Run the vulnerability check
          library(biggr)
          vuln_report <- check_vulnerabilities(
            create_issue = FALSE,  # We'll create the issue ourselves
            severity_threshold = "high",
            output_file = report_file
          )
          
          # Check if there are any vulnerabilities
          if (nrow(vuln_report) > 0) {
            # Save the report as an artifact
            write.csv(vuln_report, "vulnerability_report.csv", row.names = FALSE)
            
            # Create a summary for the GitHub step
            cat("::set-output name=has_vulnerabilities::true\n")
            cat("::set-output name=vuln_count::", nrow(vuln_report), "\n")
            
            # Create a summary of vulnerabilities for the issue
            vuln_summary <- paste0(
              "Found ", nrow(vuln_report), " vulnerabilities:\n",
              paste(collapse = "\n", apply(vuln_report, 1, function(row) {
                paste0("- ", row["package"], " (", row["severity"], "): ", row["title"])
              }))
            )
            cat("::set-output name=vuln_summary::", vuln_summary, "\n")
          } else {
            cat("::set-output name=has_vulnerabilities::false\n")
          }
        shell: Rscript {0}
        id: scan
      
      - name: Upload vulnerability report
        uses: actions/upload-artifact@v2
        if: steps.scan.outputs.has_vulnerabilities == 'true'
        with:
          name: vulnerability-report
          path: vulnerability_report.csv
      
      - name: Create GitHub Issue
        uses: actions/github-script@v5
        if: steps.scan.outputs.has_vulnerabilities == 'true'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const vuln_count = ${{ steps.scan.outputs.vuln_count }};
            const vuln_summary = `${{ steps.scan.outputs.vuln_summary }}`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Security Alert: ${vuln_count} vulnerabilities found in dependencies`,
              body: `## Security Vulnerability Report

            The weekly vulnerability scan has identified security issues in package dependencies.

            ${vuln_summary}

            Please review the full report in the workflow artifacts and update the affected dependencies as soon as possible.

            This issue was automatically created by the vulnerability scanning GitHub Action.`
            });